{"version":3,"sources":["components/App/app.module.css","serviceWorker.js","store/utils/index.js","store/app/actions.js","store/app/utils.js","store/app/reducer.js","services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","store/story/selectors.js","components/App/styles.js","styles/mediaQueries.js","styles/palette.js","components/ListItem/styles.js","components/ListItem/utils/getSiteHostname.js","components/ListItem/utils/getArticleLink.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/styles.js","components/Loader/index.js","components/App/App.js","components/App/index.js","styles/globals.js","index.js"],"names":["module","exports","App","Boolean","window","location","hostname","match","buildActionCreator","type","payload","arguments","length","undefined","buildRequestCreator","requestCallback","requestObj","request","concat","success","failure","mapTypeToRequest","dispatch","NS","actionTypes","SET_THEME","SET_LAYOUT","layouts","themes","app","state","theme","layout","_ref","Object","objectSpread","API_ROOT","process","URL","TIMEOUT","HEADERS","Content-Type","Accept","client","ApiService","_ref$baseURL","baseURL","_ref$timeout","timeout","_ref$headers","headers","auth","classCallCheck","this","axios","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","path","get","then","data","post","put","patch","delete","JSON_QUERY","hackerNewsApi","getTopStoryIds","getNewStoryIds","getBestStoryIds","getStory","id","getStoriesByPage","ids","page","_getPageSlice","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","FETCH_STORY_IDS","FETCH_STORIES","actions","fetchStoryIds","storyIds","fetchStories","catch","err","_ref2","stories","story","isFetching","toConsumableArray","rootReducer","combineReducers","AppReducer","StoryReducer","middlewareList","push","thunk","composeEnhancers","compose","middleware","apply","applyMiddleware","configureStore","initialState","createStore","reducer","hasMoreStoriesSelector","createSelector","AppMain","styled","div","_templateObject","background","Wrapper","_templateObject2","Title","h1","_templateObject3","textSecondary","colorsDark","backgroundSecondary","text","border","Item","li","styles_templateObject","h3","styles_templateObject2","Host","span","styles_templateObject3","_ref3","ExternalLink","a","_templateObject4","_ref4","Description","_templateObject5","_ref5","CommentLink","_templateObject6","_ref6","_ref7","getSiteHostname","siteUrl","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","timeago","Timeago","LINK_REL","ListItem","props","by","_props$kids","kids","score","title","time","site","articleLink","userUrl","react_default","createElement","className","styles","href","rel","target","styles_Title","format","Date","toISOString","defaultProps","ListWrapper","ul","List_styles_templateObject","List","react","components_ListItem","assign","key","blink","keyframes","Loader_styles_templateObject","Animation","Loader_styles_templateObject2","Loader","_React$Component","_getPrototypeOf2","_this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","console","log","fetchStoriesFirstPage","grabStories","_this$props","inherits","createClass","value","_this$props2","hasMoreStories","styled_components_browser_esm","lib_default","dataLength","next","hasMore","loader","components_Loader","style","height","overflow","components_List","React","connect","injectGlobal","globals_templateObject","setGlobalStyles","store","ReactDOM","render","es","components_App","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.866c9085.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__x3BDE\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* \nexport const buildRequestActionTypes = (type, namespace) => ({\n  [`${type}_REQUEST`]: `${namespace}/${type}_REQUEST`,\n  [`${type}_SUCCESS`]: `${namespace}/${type}_SUCCESS`,\n  [`${type}_FAILURE`]: `${namespace}/${type}_FAILURE`,\n});\n\nexport const buildEventActionCreator = type => {\n  return (name = '', data = {}) => ({\n    type,\n    payload: {},\n    event: {\n      name,\n      data,\n    },\n  });\n};\n */\n\nexport const buildActionCreator = type => {\n  //console.log('buildActionCreator for::', type);\n\n  return (payload = {}) => ({\n    type,\n    payload,\n  });\n};\n\nconst mapTypeToRequest = type => {\n  const typeRequestObject = ({\n    request: buildActionCreator(`${type}_REQUEST`),\n    success: buildActionCreator(`${type}_SUCCESS`),\n    failure: buildActionCreator(`${type}_FAILURE`),\n  });\n  //console.log('mapTypeToRequest::', typeRequestObject);\n  return typeRequestObject;\n};\n\nexport const buildRequestCreator = (type, requestCallback) => {\n  //console.log('buildRequestCreator::', type);\n\n  const requestObj = mapTypeToRequest(type);\n  const requestCreator = (payload = {}) => dispatch => requestCallback({ requestObj, payload, dispatch });\n  //console.log(requestObject, requestCreator);\n  return requestCreator;\n};\n","import { buildActionCreator } from '../utils';\n\n// namespace for this action\nconst NS = '@hackerNewsReader/app';\n\nexport const actionTypes = {\n    SET_THEME: `${NS}/SET_THEME`,\n    SET_LAYOUT: `${NS}/SET_LAYOUT`,\n};\n\n// actions return a plain ol' Javascript Object\nconst actions = {\n    setTheme: buildActionCreator(actionTypes.SET_THEME),\n    setLayout: buildActionCreator(actionTypes.SET_LAYOUT),\n};\n\nexport default actions;\n\n/* \nexport const buildActionCreator = type => {\n  return (payload = {}) => ({\n    type,\n    payload,\n  });\n};\n*/","export const layouts = {\n    grid: 'grid',\n    list: 'list',\n};\n\nexport const themes = {\n    dark: 'dark',\n    light: 'light',\n};\n","import { actionTypes } from './actions';\nimport { layouts, themes } from './utils';\n\nconst getInitialState = () => ({\n    theme: themes.dark,\n    layout: layouts.list,\n});\n\n// state, action\nconst app = (state = getInitialState(), { type, payload }) => {\n    switch (type) {\n        case actionTypes.SET_THEME:\n            return {\n                ...state,\n                ...payload,\n            };\n        case actionTypes.SET_LAYOUT:\n            return {\n                ...state,\n                ...payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default app;\n","import axios from 'axios';\n\n// Default API will be your root\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nclass ApiService {\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\n    const client = axios.create({\n      baseURL,\n      timeout,\n      headers,\n      auth,\n    });\n\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.client = client;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(path) {\n    return this.client.get(path).then(response => response.data);\n  }\n\n  post(path, payload) {\n    return this.client.post(path, payload).then(response => response.data);\n  }\n\n  put(path, payload) {\n    return this.client.put(path, payload).then(response => response.data);\n  }\n\n  patch(path, payload) {\n    return this.client.patch(path, payload).then(response => response.data);\n  }\n\n  delete(path) {\n    return this.client.delete(path).then(response => response.data);\n  }\n}\n\nexport default ApiService;\n","import ApiService from './Api';\n\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\nconst client = new ApiService({ baseURL: BASE_URL });\nconst JSON_QUERY = '.json?print=pretty';\n\nconst hackerNewsApi = {};\n\nconst PAGE_LIMIT = 30;\nconst getPageSlice = (limit, page = 0) => ({ begin: page * limit, end: (page + 1) * limit });\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getNewStoryIds = () => client.get(`/newstories${JSON_QUERY}`);\nhackerNewsApi.getBestStoryIds = () => client.get(`/beststories${JSON_QUERY}`);\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\nhackerNewsApi.getStoriesByPage = (ids, page) => {\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\n  const activeIds = getPageValues({ begin, end, items: ids });\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\n  return Promise.all(storyPromises);\n};\n\nexport default hackerNewsApi;\n","import hackerNewsApi from '../../services/hackerNewsApi'; //'services/hackerNewsApi';\nimport { buildRequestCreator } from '../../store/utils'; //'store/utils';\n\nconst NS = '@hackerNewsReader/story';\n\nexport const actionTypes = {\n  FETCH_STORY_IDS: `${NS}/FETCH_STORY_IDS`,\n  FETCH_STORIES: `${NS}/FETCH_STORIES`,\n};\n\nconst actions = {\n\n  fetchStoryIds: buildRequestCreator(actionTypes.FETCH_STORY_IDS, ({ requestObj, payload, dispatch }) => {\n    //console.log('fetchStoryIds()::', requestObj, payload, dispatch);\n    \n    dispatch(requestObj.request(payload));\n    //return hackerNewsApi.getTopStoryIds()\n    //return hackerNewsApi.getTopStoryIds()\n    return hackerNewsApi.getNewStoryIds()\n      .then(storyIds => {\n        dispatch(requestObj.success({ storyIds }));\n        dispatch(actions.fetchStories({ storyIds, page: 0 }));\n        return storyIds;\n      })\n      .catch(err => dispatch(requestObj.failure(err)));\n  }),\n\n  fetchStories: buildRequestCreator(actionTypes.FETCH_STORIES, ({ requestObj, payload, dispatch }) => {\n    //console.log('fetchStories()::', requestObj, payload, dispatch);\n\n    const { storyIds, page } = payload;\n    dispatch(requestObj.request(payload));\n    return hackerNewsApi.getStoriesByPage(storyIds, page)\n      .then(stories => dispatch(requestObj.success({ stories })))\n      .catch(err => dispatch(requestObj.failure(err)));\n  }),\n};\n\nexport default actions;\n","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  storyIds: [],\n  stories: [],\n  page: 0,\n  isFetching: false,\n  error: '',\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n  switch (type) {\n    case `${actionTypes.FETCH_STORY_IDS}_REQUEST`:\n    case `${actionTypes.FETCH_STORIES}_REQUEST`:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case `${actionTypes.FETCH_STORY_IDS}_SUCCESS`:\n      return {\n        ...state,\n        ...payload,\n      };\n    case `${actionTypes.FETCH_STORIES}_SUCCESS`:\n      return {\n        ...state,\n        stories: [...state.stories, ...payload.stories],\n        page: state.page + 1,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default story;\n","import { combineReducers } from 'redux';\n\nimport AppReducer from './app/reducer';\nimport StoryReducer from './story/reducer';\n/*\n* Reducers act on actions.\n* The reducers must be pure. Given the same arguments, it should calculate the next state\n* and return it. No surprises. No side effects. No API calls. No mutations. Just a calculation.\n* */\n\nconst rootReducer = combineReducers({\n    //state: (state = {}) => state\n    app: AppReducer,\n    story: StoryReducer,\n});\n\nexport default rootReducer;\n","import { compose, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger'\n\nconst isProd = process.env.NODE_ENV === 'production';\n\n/**\n|--------------------------------------------------\n| Middleware only wraps the store's dispatch function.\n| Technically, anything a middleware can do, you can do manually by wrapping every dispatch call\n| https://redux.js.org/api/applymiddleware\n|--------------------------------------------------\n*/\nconst middlewareList = [];\nmiddlewareList.push(thunk);\n\nif (!isProd) {\n    middlewareList.push(createLogger());\n}\n\n/**\n|--------------------------------------------------\n| store enhancers are the most powerful Redux extension mechanism.\n| It is a higher-order function that composes a store creator to return a new, enhanced store creator.\n| applyMiddleware is a store enhancer. redux-devtools is another.\n| It is highly unlikely you'll ever want to write a store enhancer yourself.\n| https://redux.js.org/glossary#store-enhancer\n|--------------------------------------------------\n*/\nconst storeEnhancers = [];\n/* let devTool = f => f;\nstoreEnhancers.push(devTool); */\n\nlet composeEnhancers = compose;\nif (!isProd) {\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n}\n\nconst middleware = composeEnhancers(\n    applyMiddleware(...middlewareList),\n    ...storeEnhancers\n)\n\nexport default middleware;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware'\n\nconst configureStore = initialState => {\n    const store = createStore(\n        reducer,\n        initialState,\n        middleware\n    );\n\n    return store;\n};\n\nexport default configureStore;\n","import { createSelector } from 'reselect';\n\nconst storyIdsSelector = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories;\n\nexport const hasMoreStoriesSelector = createSelector(\n  [ storyIdsSelector, storiesSelector ], \n  (storyIds, stories) => storyIds.length > stories.length,\n);\n","import styled from 'styled-components';\nimport { tablet } from '../../styles/mediaQueries';\n\nexport const AppMain = styled.div`\n  min-width: 100vw;\n  min-height: 100vh;  \n  background-color: ${({ theme }) => theme.background};\n`;\n\nexport const Wrapper = styled.div`\n  width: 85%;\n  margin-left: auto;\n  margin-right: auto;\n  height: 100%;\n  overflow: hidden;\n  padding-bottom: 200px;\n\n  ${tablet} {\n    width: 96%;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 20px;\n  font-weight: 300;\n  margin-top: 24px;\n  margin-bottom: 26px;\n`;\n","export const mobile = '@media only screen and  (max-width: 480px)';\nexport const tablet = '@media only screen and  (max-width: 768px)';\nexport const monitor = '@media only screen and  (min-width: 1400px)';\n","export const colorsDark = {\n  background: '#272727',\n  backgroundSecondary: '#393C3E',\n  text: '#bfbebe',\n  textSecondary: '#848886',\n  border: '#272727',\n};\n\nexport const colorsLight = {\n  background: '#EAEAEA',\n  backgroundSecondary: '#F8F8F8',\n  text: '#848886',\n  textSecondary: '#aaaaaa',\n  border: '#EAEAEA',\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 14px 24px;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${({ theme }) => theme.text};\n  margin-top: 0;\n  margin-bottom: 6px;\n  font-weight: 400;\n  font-size: 16px;\n  letter-spacing: 0.4px;\n`;\n\nexport const Host = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n  color: ${({ theme }) => theme.text};\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const Description = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSecondary};\n`;\n\nexport const CommentLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n\n  &:visited {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n`;\n","import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `http://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;\n","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url : commentUrl;\n\n  return link;\n};\n\nexport default getArticleLink;","// @flow\nimport React from 'react';\nimport Timeago from 'timeago.js'\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\nimport getSiteHostname from './utils/getSiteHostname';\nimport getArticleLink, { HN_USER, HN_ITEM } from './utils/getArticleLink';\n\nimport type Story from \"../../flow-types/story\";\n\n// CSS\nimport styles from './list-item.module.css';\n\nconst timeago = Timeago();\n\nconst LINK_REL = 'noopener noreferrer nofollow';\n\nconst ListItem = (props: Story) => {\n  const { by, kids=[], score, url, title, id, type, time } = props;\n\n  const site = getSiteHostname(url) || 'news.ycombinator.com';\n  const articleLink = getArticleLink({ url, id });\n  const commentUrl = `${HN_ITEM}${id}`;\n  const userUrl = `${HN_USER}${by}`;\n\n  return (\n    <Item className={styles.ListItem}>\n      <ExternalLink href={articleLink} rel={LINK_REL} target=\"_blank\">\n        <Title>\n          { title } {' '}\n          <Host>({type} {id} - { site })</Host> \n        </Title>\n      </ExternalLink>\n      <Description>\n        { score } points by {' '}\n        <CommentLink href={userUrl} rel={LINK_REL} target=\"_blank\">\n          { by } {' |  '}\n        </CommentLink>\n        { timeago.format(new Date(time * 1000).toISOString()) } {' | '}\n        <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\n          { kids.length } Comments\n        </CommentLink>\n      </Description>\n    </Item>\n  )\n};\n\nListItem.defaultProps = {};\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul`\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n","// @flow\nimport * as React from 'react';\nimport ListItem from '../ListItem'; //components/ListItem';\nimport type Story from '../../flow-types/story';\n\n// CSS\nimport styles from './list.module.css';\nimport { ListWrapper } from './styles';\n\ntype Props = { stories: Array<Story> };\n\nconst List = (props: Props) => {\n  //console.log(props);\n  const { stories } = props;\n  \n  return (\n    <div className={styles.List}>\n      <ListWrapper>\n        { stories.map((story) => {\n          return ( <ListItem {...story} key={story.id} /> );\n        }) }\n      </ListWrapper>\n    </div>\n  )\n};\n\nList.defaultProps = {};\nexport default List;\n","import styled, { keyframes } from 'styled-components';\n\nconst blink = keyframes`\n  /**\n  * At the start of the animation the dot\n  * has an opacity of .2\n  */\n  0% {\n    opacity: .2;\n  }\n  /**\n  * At 20% the dot is fully visible and\n  * then fades out slowly\n  */\n  20% {\n    opacity: 1;\n  }\n  /**\n  * Until it reaches an opacity of .2 and\n  * the animation can start again\n  */\n  100% {\n    opacity: .2;\n  }\n`;\n\nexport const Animation = styled.div`\n  text-align: center;\n\n  span {\n    color: ${({ theme }) => theme.textSecondary};\n    display: inline-block;\n    margin-left: 4px;\n    margin-right: 4px;\n    font-size: 80px;\n    line-height: 0.1;\n\n    /**\n    * Use the blink animation, which is defined above\n    */\n    animation-name: ${blink};\n    /**\n    * The total time of animation\n    */\n    animation-duration: 1s;\n    /**\n    * It will repeat itself forever\n    */\n    animation-iteration-count: infinite;\n    /**\n    * This makes sure that the starting style (opacity: .2)\n    * of the animation is applied before the animation starts.\n    * Otherwise we would see a short flash or would have\n    * to set the default styling of the dots to the same\n    * as the animation. Same applies for the ending styles.\n    */\n    animation-fill-mode: both;\n  }\n\n  span:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n  span:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;\n","import React from 'react';\n\nimport { Animation } from './styles';\n\nconst Loader = () => (\n  <Animation>\n    <span>.</span>\n    <span>.</span>\n    <span>.</span>\n  </Animation>\n);\n\nexport default Loader;\n","// @flow\nimport * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { AppMain, Wrapper, Title } from './styles';\nimport { colorsDark } from '../../styles/palette'; //styles/palette';\nimport List from '../List'; //'components/List';\nimport Loader from '../Loader';\n\nimport type Story from '../../flow-types/story'; //\"flow-types/story\";\n\n// CSS\nimport styles from './app.module.css';\n\ntype Props = {\n  theme: \"dark\" | \"light\",\n  layout: \"grid\" | \"list\",\n  page: number,\n  storyIds: Array<number>,\n  stories: Array<Story>,\n  isFetching: boolean,\n  hasMoreStories: boolean,\n  fetchStories: ({storyIds:Array<number>, page:number}) => {},\n  fetchStoriesFirstPage: () => {},\n};\ntype State = {};\n\nexport class App extends React.Component<Props, State> {\n  static defaultProps = { stories: [], };\n  state = {};\n\n  componentDidMount = () => {\n    console.log('App CDM Props:', this.props);\n    \n    this.props.fetchStoriesFirstPage();\n  }\n\n  grabStories = () => {\n    const { storyIds, page, fetchStories, isFetching } = this.props;\n    if (!isFetching) {\n      fetchStories({ storyIds, page });\n    }\n  };\n\n  render() {\n    const { stories, hasMoreStories } = this.props;\n    //console.log(stories, layout, theme);\n    \n\n    return (\n      <ThemeProvider theme={colorsDark}>\n        <AppMain className={styles.App}>\n          <Wrapper>\n            <Title>Hacker News Reader</Title>\n            <InfiniteScroll \n              dataLength={stories.length}\n              next={this.grabStories}\n              hasMore={hasMoreStories}\n              loader={<Loader />}\n              style={{\n                height: '100%',\n                overflow: 'visible',\n              }}\n            >\n              <List stories={stories} />\n            </InfiniteScroll>\n          </Wrapper>\n        </AppMain>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default App\n","import { connect } from 'react-redux';\nimport actions from '../../store/story/actions'; // 'store/story/actions';\nimport { hasMoreStoriesSelector } from '../../store/story/selectors';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n    layout: state.app.layout,\n    theme: state.app.theme,\n    stories: state.story.stories,\n    page: state.story.page,\n    storyIds: state.story.storyIds,\n    isFetching: state.story.isFetching,\n    hasMoreStories: hasMoreStoriesSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => ({ \n    fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n    fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page })),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App);\n","import { injectGlobal } from 'styled-components';\n\nconst setGlobalStyles = () =>\n  injectGlobal`\n    * {\n      box-sizing: border-box;\n    }\n\n    html, body {\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;      \n      overflow-x: hidden;\n      margin: 0;\n      padding: 0;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n\n    a {\n      text-decoration: none;\n\n      &:visited {\n        color: inherit;\n      }\n    }\n  `;\n\nexport default setGlobalStyles;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// REDUX\nimport { Provider } from \"react-redux\";\nimport configureStore from './store'\n\nimport App from './components/App';\nimport setGlobalStyles from './styles/globals'\n\n// styling instead of index.css\nsetGlobalStyles();\n\nconst renderApp = () => {\n    \n    const initialState = {};\n    const store = configureStore(initialState);\n\n    if (process.env.NODE_ENV !== 'production') {\n        //just to get some console output\n        store.dispatch({ type: '@hackerNewsReader/@@INIT' })\n        //console.log('Initial state ->', store.getState());\n    }\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n\n};\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}